pipeline {
    agent any
    environment {
        CI = 'false'
    }
    
    tools {
        nodejs 'Node16'
    }

    stages {
        stage("Clone") {
            steps {
                dir("wizdesk") {
                    git url:'https://github.com/apiwizlabs/wizdesk.git', branch: 'main'     
                }
            }
        }

        stage('Build Frontend') {
            steps {
                sh 'node update-package.js'
                sh 'cat wizdesk/package.json'
                sh 'cd wizdesk && npm install'
                sh 'cd wizdesk && npm run build'
                sh 'docker build -t apiwiz-frontend -f Dockerfile .'
            }
        }

        stage('Build Backend') {
            steps {
                sh 'cd wizdesk/Server && npm install'
                sh 'docker build -t apiwiz-backend -f Server/Dockerfile .'
            }
        }

        stage('Test') {
            steps {
                // Run the tests for the frontend
                sh 'cd wizdesk && npm test -- --passWithNoTests'
            }
        }
        stage("Push to Repository") {
            steps {
                withCredentials([usernamePassword(credentialsId: "DockerHub", passwordVariable: "DockerHubPass", usernameVariable: "DockerHubUser")]) {
                    sh "docker login -u ${env.DockerHubUser} -p ${env.DockerHubPass}"
                    sh "docker tag apiwiz-frontend ${env.DockerHubUser}/apiwiz-frontend:${env.BUILD_NUMBER}"
                    sh "docker push ${env.DockerHubUser}/apiwiz-frontend:${env.BUILD_NUMBER}"
                    sh "docker tag apiwiz-backend ${env.DockerHubUser}/apiwiz-backend:${env.BUILD_NUMBER}"
                    sh "docker push ${env.DockerHubUser}/apiwiz-backend:${env.BUILD_NUMBER}"
                }
            }
        }


    }
}
